//###1
//Почему код даёт именно такие результаты?

// var a = 1, b = 1, c, d;
// c = ++a; alert(c);           // 2 сначала производится инкрементирование, затем возврат с обновленным значением
// d = b++; alert(d);           // 1 сначала производится возврат значения, потом выполняется инкрементирование
// c = (2 + ++a); alert(c);      // 5 
// d = (2 + b++); alert(d);      // 4
// alert(a);                    // 3
// alert(b);                    // 3

//###2
//Чему будет равен x в примере ниже?

// var a = 2;
// var x = 1 + (a *= 2);
// alert("X будет равен " + x); //5

//###3
// Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
// если a и b положительные, вывести их разность;
// если а и b отрицательные, вывести их произведение;
// если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом. 

// var a = 15;
// var b = 32;
// if (a >= 0 && b >= 0) {
//     alert(a - b);
// }
// else if (a < 0 && b < 0) {
//     alert(a * b);
// }
// else if (a >= 0 && b < 0 || a < 0 && b >= 0) {
//     alert(a + b);
// }

//###4
//Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.

// var a = 8;
// switch (a) {
//     case a = 1:
//         alert('1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 2:
//         alert('2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 3:
//         alert('3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 4:
//         alert('4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 5:
//         alert('5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 6:
//         alert('6, 7, 8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 7:
//         alert('7, 8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 8:
//         alert('8, 9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 9:
//         alert('9, 10, 11, 12, 13, 14, 15');
//         break;
//     case a = 10:
//         alert('10, 11, 12, 13, 14, 15');
//         break;
//     case a = 11:
//         alert('11, 12, 13, 14, 15');
//         break;
//     case a = 12:
//         alert('12, 13, 14, 15');
//         break;
//     case a = 13:
//         alert('13, 14, 15');
//         break;
//     case a = 14:
//         alert('14, 15');
//         break;
//     case a = 15:
//         alert('15');
//         break;
//     default:
//         alert("Число дробное, меньше нуля или больше 15");
//         break;
// }

//###5
//Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.

// function sum(x, y) {
//     return x + y;
// }
// function sub(x, y) {
//     return x - y;
// }
// function multi(x, y) {
//     return x * y;
// }
// function div(x, y) {
//     return x / y;
// }

//###6
//Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), 
//где arg1, arg2 – значения аргументов, operation – строка с названием операции. 
//В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

// function mathOperation(x, y, operation) {
//     switch (operation) {
//         case operation = sum:
//             alert(sum(x, y));
//             break;
//         case operation = sub:
//             alert(sub(x, y));
//             break;
//         case operation = multi:
//             alert(multi(x, y));
//             break;
//         case operation = div:
//             alert(div(x, y));
//             break;
//         default:
//             alert('Операция не относится к основным арифметическим действиям');
//             break;
//     }
// }
// alert(mathOperation(10, 15, multi));